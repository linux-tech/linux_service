#!/bin/bash

TAG_LIST=/tmp/tag.list
echo "为了简化程序，需要在所需操作的仓库目录下进行操作。"
# 打印 LOGO
cat <<'EOF'
[1:36m
					_ _  __              _                  
                    | (_)/ _|            | |                 
 _ __ ___   ___   __| |_| |_ _   _ ______| |_ __ _  __ _ ___ 
| '_ ` _ \ / _ \ / _` | |  _| | | |______| __/ _` |/ _` / __|
| | | | | | (_) | (_| | | | | |_| |      | || (_| | (_| \__ \
|_| |_| |_|\___/ \__,_|_|_|  \__, |       \__\__,_|\__, |___/
                              __/ |                 __/ |    
                             |___/                 |___/     
[0m							 
EOF

# 删除原有 tag
echo "切换到主分支" && git checkout master || exit
echo "获取最新代码" && git pull || exit
echo "显示所有 tag 信息" && git tag | tee ${TAG_LIST}  2>&1
read -p "请输入需要修改的 tag :" TAG
if `fgrep -qi "${TAG}" ${TAG_LIST}`;then
    git tag -d ${TAG} && echo "本地 tag: ${TAG} 已经删除"
	git push origin :refs/tags/${TAG} && echo "远程 tag: ${TAG} 已经删除"
else
    read -p "请确认您要删除的 tag 为 ${TAG}: [Y|N]" OPTION
	case ${OPTION} in 
	y|Y|yes|YES)
	    echo "您输入的 tag 不存在，这说明当前代码或许不是最新的，请手动 pull 最新代码。"
		git pull
		exit
		;;
	*)
	    echo "程序即将退出，请再次运行该程序以输入正确的 tag 信息"
		sleep 2
		exit
		;;
	esac
fi

# 重新创建 tag
git tag ${TAG}
git push origin ${TAG}
git show ${TAG}
